   --                    --
-- -- Table Construction -- --
   --                    --


--
-- Table structure for table `User`
--
DROP TABLE IF EXISTS `User`;

CREATE TABLE `User` (
    `user_id`  int(11) NOT NULL AUTO_INCREMENT,
    `username` varchar(16) NOT NULL UNIQUE,
    `password` varchar(64) NOT NULL,
    PRIMARY KEY (`user_id`)
);


--
-- Table structure for `List`
--
DROP TABLE IF EXISTS `List`;

CREATE TABLE `List` (
	`list_id`    int(11) NOT NULL AUTO_INCREMENT,
    `list_name`  varchar(32) NOT NULL,
    `list_owner` int(11) NOT NULL,
    UNIQUE(`list_name`, `list_owner`),
    PRIMARY KEY (`list_id`),
    FOREIGN KEY (`list_owner`) REFERENCES `User` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
);


--
-- Table structure for table `Media`
--
DROP TABLE IF EXISTS `Media`;

CREATE TABLE `Media` (
    `media_id`    int(11) NOT NULL AUTO_INCREMENT,
    `type`        varchar(10) NOT NULL,
    `title`       varchar(100) NOT NULL,
    `score`       int(11) DEFAULT NULL,
    `creator`     varchar(100) NOT NULL,
    `progress`    tinyint(1) NOT NULL DEFAULT 0,
    `media_owner` int(11) NOT NULL,
    PRIMARY KEY (`media_id`),
    FOREIGN KEY (`media_owner`) REFERENCES `User` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- 
-- Table structure for `Post`
-- 
DROP TABLE IF EXISTS `Post`;

CREATE TABLE `Post` (
    `post_id`   int(11) NOT NULL AUTO_INCREMENT,
    `author`    int(11) NOT NULL,
    `body`      varchar(2000) NOT NULL DEFAULT '',
    `date_time` varchar(12) NOT NULL DEFAULT '',
    PRIMARY KEY (`post_id`),
    FOREIGN KEY (`author`) REFERENCES `User` (`user_id`) ON DELETE CASCADE ON UPDATE CASCADE
);


--
-- Table structure for `List_Media`
--
DROP TABLE IF EXISTS `List_Media`;

CREATE TABLE `List_Media` (
	`list_id`  int(11) NOT NULL,
    `media_id` int(11) NOT NULL,
    PRIMARY KEY (`list_id`, `media_id`)
);


--
-- Table structure for `Post_Media`
--
DROP TABLE IF EXISTS `Post_Media`;

CREATE TABLE `Post_Media` (
    `post_id`  int(11) NOT NULL,
    `media_id` int(11) NOT NULL,
    PRIMARY KEY (`post_id`, `media_id`),
    FOREIGN KEY (`post_id`) REFERENCES `Post` (`post_id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`media_id`) REFERENCES `Media` (`media_id`) ON DELETE CASCADE ON UPDATE CASCADE
);


   --             --
-- -- Sample Data -- --
   --             --


--
-- Sample User Data
-- NOTE: Passwords are stored as hashes generated by bcrypt. The example passwords will NOT work
--       on the site! You must create a new user if you want to test create/update/delete features.
--       You can still access their pages and view their content, though you can't interact with it.
--
INSERT INTO `User` (`username`, `password`) VALUES
    ('kingslayer',  'iluvgot'),
    ('marvelfan1',  'excelsior!'),
    ('Harry_Otter', 'theboywholived'),
	('jackson',     'hunter12');


--
-- Sample Lists
--
INSERT INTO `List` (`list_name`, `list_owner`) VALUES
    ('shows',                     1),
    ('Marvel Cinematic Universe', 2),
    ('books',                     3),
	('Fav Stuff',                 4),
	('Empty Lists',               4);


--
-- Sample Media Items
--
INSERT INTO `Media` (`type`, `title`, `creator`, `score`, `progress`, `media_owner`) VALUES 
    ('Show',  'Game of Thrones',                          'HBO',            5, 1, 1),
    ('Movie', 'Thor: Ragnarok',                           'Taika Waititi',  5, 1, 2),
    ('Book',  'Harry Potter and the Prisoner of Azkaban', 'JK Rowling',     1, 0, 3),
	('Comic', 'Shiki',                                    'Ryuu Fujisaki', 10, 1, 4),
	('Movie', 'Kimi no Na wa.',                           'Makoto Shinkai', 9, 1, 4);


--
-- Sample Posts
--
INSERT INTO `Post` (`author`, `body`, `date_time`) VALUES
    (2, 'Just saw the latest Thor movie. It was dope.', '3/11/2017'), 
	(4, 'This movie is too perfect for its own good.', '3/17/2018'),
	(4, 'Great manga. Would definitely read it again.', '4/6/2016'),
	(4, 'These are two of my favorite pieces of media ever!', '5/17/19');


--
-- Sample Media/List Relationships
--
INSERT INTO `List_Media` VALUES
	(4, 4),
	(4, 5),
	(2, 2);


--
-- Sample Media/Post Relationships
--
INSERT INTO `Post_Media` VALUES
    (1, 2),
	(2, 5),
	(3, 4),
	(4, 4),
	(4, 5); 